<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Books Search</title>
    <style>
        .error { color: red; }
        .pagination { margin: 20px 0; }
        .pagination a { margin: 0 5px; }
        .book-item { margin-bottom: 20px; }
        .search-form { margin-bottom: 20px; }
        .search-form div { margin-bottom: 10px; }
        .sort-options { margin-bottom: 15px; }
    </style>
</head>
<body>
    <h1>Book Search Results</h1>
    
    <form class="search-form" action="/books/search/advanced" method="GET">
        <div>
            <label for="title">Title:</label>
            <input type="text" id="title" name="title" value="<%= query.title || '' %>">
        </div>
        <div>
            <label for="author">Author:</label>
            <input type="text" id="author" name="author" value="<%= query.author || '' %>">
        </div>
        <div>
            <label for="genre">Genre:</label>
            <select id="genre" name="genre">
                <option value="">All Genres</option>
                <option value="fiction" <%= query.genre === 'fiction' ? 'selected' : '' %>>Fiction</option>
                <option value="non-fiction" <%= query.genre === 'non-fiction' ? 'selected' : '' %>>Non-Fiction</option>
                <option value="science-fiction" <%= query.genre === 'science-fiction' ? 'selected' : '' %>>Science Fiction</option>
                <option value="fantasy" <%= query.genre === 'fantasy' ? 'selected' : '' %>>Fantasy</option>
                <option value="mystery" <%= query.genre === 'mystery' ? 'selected' : '' %>>Mystery</option>
                <option value="biography" <%= query.genre === 'biography' ? 'selected' : '' %>>Biography</option>
            </select>
        </div>
        <div>
            <label for="publishedAfter">Published After:</label>
            <input type="number" id="publishedAfter" name="publishedAfter" min="1000" max="2023" value="<%= query.publishedAfter || '' %>">
        </div>
        <div>
            <label for="publishedBefore">Published Before:</label>
            <input type="number" id="publishedBefore" name="publishedBefore" min="1000" max="2023" value="<%= query.publishedBefore || '' %>">
        </div>
        <div class="sort-options">
            <label for="sort">Sort by:</label>
            <select id="sort" name="sortBy">
                <option value="relevance" <%= query.sortBy === 'relevance' ? 'selected' : '' %>>Relevance</option>
                <option value="title_asc" <%= query.sortBy === 'title_asc' ? 'selected' : '' %>>Title (A-Z)</option>
                <option value="title_desc" <%= query.sortBy === 'title_desc' ? 'selected' : '' %>>Title (Z-A)</option>
                <option value="date_asc" <%= query.sortBy === 'date_asc' ? 'selected' : '' %>>Publication Date (Oldest)</option>
                <option value="date_desc" <%= query.sortBy === 'date_desc' ? 'selected' : '' %>>Publication Date (Newest)</option>
            </select>
        </div>
        <button type="submit">Search</button>
    </form>
    
    <% if (error) { %>
        <div class="error">
            <p><%= error %></p>
        </div>
    <% } else if (data && data.length > 0) { %>
        <ul>
            <% data.forEach(book => { %>
                <li class="book-item">
                    <h3><%= book.title %></h3>
                    <% if (book.author_name) { %>
                        <p>Author: <%= book.author_name.join(', ') %></p>
                    <% } %>
                    <% if (book.first_publish_year) { %>
                        <p>Published: <%= book.first_publish_year %></p>
                    <% } %>
                    <% if (book.cover_i) { %>
                        <img src="placeholder.jpg" 
                             data-src="https://covers.openlibrary.org/b/id/<%= book.cover_i %>-M.jpg" 
                             alt="<%= book.title %>" 
                             class="lazy-load">
                    <% } %>
                    <div class="book-actions">
                        <button class="add-to-collection" data-book-id="<%= book.key.split('/').pop() %>" 
                                data-title="<%= book.title %>"
                                data-authors="<%= book.author_name ? JSON.stringify(book.author_name) : '[]' %>"
                                data-cover="<%= book.cover_i ? `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg` : '' %>">
                            Add to Collection
                        </button>
                    </div>
                </li>
            <% }) %>
        </ul>

        <% if (pagination && pagination.totalPages > 1) { %>
            <div class="pagination">
                <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                    <a href="?<%= Object.entries(query || {}).map(([key, value]) => `${key}=${value}`).join('&') %>&page=<%= i %>"><%= i %></a>
                <% } %>
            </div>
        <% } %>
    <% } else { %>
        <p>No books found. Please try another search.</p>
    <% } %>

    <a href="/">Back to search</a>
    
    <script>
        // Lazy loading implementation
        document.addEventListener("DOMContentLoaded", function() {
            const lazyImages = document.querySelectorAll(".lazy-load");
            
            if ("IntersectionObserver" in window) {
                const imageObserver = new IntersectionObserver(function(entries, observer) {
                    entries.forEach(function(entry) {
                        if (entry.isIntersecting) {
                            const image = entry.target;
                            image.src = image.dataset.src;
                            image.classList.remove("lazy-load");
                            imageObserver.unobserve(image);
                        }
                    });
                });
                
                lazyImages.forEach(function(image) {
                    imageObserver.observe(image);
                });
            } else {
                // Fallback for browsers that don't support IntersectionObserver
                lazyImages.forEach(function(image) {
                    image.src = image.dataset.src;
                });
            }
            
            // Add to collection functionality
            document.querySelectorAll('.add-to-collection').forEach(button => {
                button.addEventListener('click', async function() {
                    const bookId = this.dataset.bookId;
                    const title = this.dataset.title;
                    const authors = JSON.parse(this.dataset.authors);
                    const coverImage = this.dataset.cover;
                    
                    // Show collection selection modal
                    // This would be implemented with a modal showing user's collections
                    alert('Feature coming soon: Add to collection');
                    
                    // Example API call (would be triggered from modal)
                    /*
                    try {
                        const response = await fetch(`/api/collections/${collectionId}/books`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                bookId,
                                title,
                                authors,
                                coverImage
                            })
                        });
                        
                        if (response.ok) {
                            alert('Book added to collection!');
                        } else {
                            alert('Failed to add book to collection');
                        }
                    } catch (error) {
                        console.error('Error adding book to collection:', error);
                        alert('An error occurred');
                    }
                    */
                });
            });
        });
    </script>
</body>
</html>
